/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TransferScalarTestsContract,
  TransferScalarTestsContractInterface,
} from "../../../../../contracts/mocks/utils/mpc/TransferScalarTestsContract";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer16",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "gtUint8",
            name: "a8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint8",
            name: "b8_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "a16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint16",
            name: "b16_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "a32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint32",
            name: "b32_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "a64_s",
            type: "uint256",
          },
          {
            internalType: "gtUint64",
            name: "b64_s",
            type: "uint256",
          },
        ],
        internalType: "struct TransferScalarTestsContract.AllGTCastingValues",
        name: "allGTCastingValues",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "new_a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "new_b",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "res",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "computeAndChekTransfer64",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "b",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "transferScalarTest",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061261f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063298bd1a31461005c578063451353bb146100785780634717f97c14610094578063de9f7a7d146100b4578063df6d2101146100d0575b600080fd5b61007660048036038101906100719190612250565b610102565b005b610092600480360381019061008d9190612250565b610453565b005b61009c610648565b6040516100ab939291906122ee565b60405180910390f35b6100ce60048036038101906100c99190612250565b610687565b005b6100ea60048036038101906100e59190612325565b610b60565b6040516100f9939291906122ee565b60405180910390f35b600080600061011d88608001518960a001518660ff16610d7d565b92509250925061012c83610e38565b63ffffffff168760ff16148015610153575061014782610e38565b63ffffffff168660ff16145b801561016a575061016381610ed6565b1515851515145b6101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a0906123fb565b60405180910390fd5b6101bf88600001518960a001518660ff16610f7d565b8093508194508295505050506101d483610e38565b63ffffffff168760ff161480156101fb57506101ef82610e38565b63ffffffff168660ff16145b8015610212575061020b81610ed6565b1515851515145b610251576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610248906123fb565b60405180910390fd5b610267886080015189602001518660ff16611038565b80935081945082955050505061027c83610e38565b63ffffffff168760ff161480156102a3575061029782610e38565b63ffffffff168660ff16145b80156102ba57506102b381610ed6565b1515851515145b6102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906123fb565b60405180910390fd5b61030f88604001518960a001518660ff166110f4565b80935081945082955050505061032483610e38565b63ffffffff168760ff1614801561034b575061033f82610e38565b63ffffffff168660ff16145b8015610362575061035b81610ed6565b1515851515145b6103a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610398906123fb565b60405180910390fd5b6103b7886080015189606001518660ff166111af565b8093508194508295505050506103cc83610e38565b63ffffffff168760ff161480156103f357506103e782610e38565b63ffffffff168660ff16145b801561040a575061040381610ed6565b1515851515145b610449576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610440906123fb565b60405180910390fd5b5050505050505050565b600080600061046e886040015189606001518660ff1661126b565b92509250925061047d83611324565b61ffff168760ff161480156104a0575061049682611324565b61ffff168660ff16145b80156104b757506104b081610ed6565b1515851515145b6104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906123fb565b60405180910390fd5b61050c886000015189606001518660ff166113c2565b80935081945082955050505061052183611324565b61ffff168760ff16148015610544575061053a82611324565b61ffff168660ff16145b801561055b575061055481610ed6565b1515851515145b61059a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610591906123fb565b60405180910390fd5b6105b0886040015189602001518660ff1661147b565b8093508194508295505050506105c583611324565b61ffff168760ff161480156105e857506105de82611324565b61ffff168660ff16145b80156105ff57506105f881610ed6565b1515851515145b61063e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610635906123fb565b60405180910390fd5b5050505050505050565b60008060008060009054906101000a900460ff16600060019054906101000a900460ff16600060029054906101000a900460ff16925092509250909192565b60008060006106a28860c001518960e001518660ff16611535565b9250925092506106b1836115f4565b67ffffffffffffffff168760ff161480156106e057506106d0826115f4565b67ffffffffffffffff168660ff16145b80156106f757506106f081610ed6565b1515851515145b610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d906123fb565b60405180910390fd5b61074c88600001518960e001518660ff16611691565b809350819450829550505050610761836115f4565b67ffffffffffffffff168760ff161480156107905750610780826115f4565b67ffffffffffffffff168660ff16145b80156107a757506107a081610ed6565b1515851515145b6107e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107dd906123fb565b60405180910390fd5b6107fc8860c0015189602001518660ff16611750565b809350819450829550505050610811836115f4565b67ffffffffffffffff168760ff161480156108405750610830826115f4565b67ffffffffffffffff168660ff16145b8015610857575061085081610ed6565b1515851515145b610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d906123fb565b60405180910390fd5b6108ac88604001518960e001518660ff16611810565b8093508194508295505050506108c1836115f4565b67ffffffffffffffff168760ff161480156108f057506108e0826115f4565b67ffffffffffffffff168660ff16145b8015610907575061090081610ed6565b1515851515145b610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d906123fb565b60405180910390fd5b61095c8860c0015189606001518660ff166118cf565b809350819450829550505050610971836115f4565b67ffffffffffffffff168760ff161480156109a05750610990826115f4565b67ffffffffffffffff168660ff16145b80156109b757506109b081610ed6565b1515851515145b6109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed906123fb565b60405180910390fd5b610a0c88608001518960e001518660ff1661198f565b809350819450829550505050610a21836115f4565b67ffffffffffffffff168760ff16148015610a505750610a40826115f4565b67ffffffffffffffff168660ff16145b8015610a675750610a6081610ed6565b1515851515145b610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d906123fb565b60405180910390fd5b610abc8860c001518960a001518660ff16611a4e565b809350819450829550505050610ad1836115f4565b67ffffffffffffffff168760ff16148015610b005750610af0826115f4565b67ffffffffffffffff168660ff16145b8015610b175750610b1081610ed6565b1515851515145b610b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4d906123fb565b60405180910390fd5b5050505050505050565b6000806000610b6d611f76565b610b7687611b0e565b816000018181525050610b8886611b0e565b816020018181525050610b9d8760ff16611baf565b816040018181525050610bb28660ff16611baf565b816060018181525050610bc78760ff16611c51565b816080018181525050610bdc8660ff16611c51565b8160a0018181525050610bf18760ff16611cf5565b8160c0018181525050610c068660ff16611cf5565b8160e00181815250506000806000610c27846000015185602001518a611d9c565b925092509250610c3683611e53565b6000806101000a81548160ff021916908360ff160217905550610c5882611e53565b600060016101000a81548160ff021916908360ff160217905550610c7b81610ed6565b600060026101000a81548160ff021916908315150217905550610ccc8460008054906101000a900460ff16600060019054906101000a900460ff16600060029054906101000a900460ff168c610453565b610d048460008054906101000a900460ff16600060019054906101000a900460ff16600060029054906101000a900460ff168c610102565b610d3c8460008054906101000a900460ff16600060019054906101000a900460ff16600060029054906101000a900460ff168c610687565b60008054906101000a900460ff16600060019054906101000a900460ff16600060029054906101000a900460ff169650965096505050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28610db260038060036001611ef1565b8b8b8b63ffffffff166040518563ffffffff1660e01b8152600401610dda9493929190612465565b6060604051808303816000875af1158015610df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1d91906124d6565b92509250925082828295509550955050505093509350939050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160036004811115610e6b57610e6a612529565b5b60f81b846040518363ffffffff1660e01b8152600401610e8c929190612593565b6020604051808303816000875af1158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf91906125bc565b9050919050565b600080606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160006004811115610f0a57610f09612529565b5b60f81b856040518363ffffffff1660e01b8152600401610f2b929190612593565b6020604051808303816000875af1158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e91906125bc565b90506000811415915050919050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28610fb260016003806001611ef1565b8b8b8b63ffffffff166040518563ffffffff1660e01b8152600401610fda9493929190612465565b6060604051808303816000875af1158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d91906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d2861106e6003600160036001611ef1565b8b8b8b63ffffffff166040518563ffffffff1660e01b81526004016110969493929190612465565b6060604051808303816000875af11580156110b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d991906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d2861112960026003806001611ef1565b8b8b8b63ffffffff166040518563ffffffff1660e01b81526004016111519493929190612465565b6060604051808303816000875af1158015611170573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119491906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286111e56003600260036001611ef1565b8b8b8b63ffffffff166040518563ffffffff1660e01b815260040161120d9493929190612465565b6060604051808303816000875af115801561122c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125091906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286112a060028060026001611ef1565b8b8b8b61ffff166040518563ffffffff1660e01b81526004016112c69493929190612465565b6060604051808303816000875af11580156112e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130991906124d6565b92509250925082828295509550955050505093509350939050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed5616002600481111561135757611356612529565b5b60f81b846040518363ffffffff1660e01b8152600401611378929190612593565b6020604051808303816000875af1158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906125bc565b9050919050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286113f760016002806001611ef1565b8b8b8b61ffff166040518563ffffffff1660e01b815260040161141d9493929190612465565b6060604051808303816000875af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146091906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286114b16002600160026001611ef1565b8b8b8b61ffff166040518563ffffffff1660e01b81526004016114d79493929190612465565b6060604051808303816000875af11580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a91906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d2861156a60048060046001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016115969493929190612465565b6060604051808303816000875af11580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d991906124d6565b92509250925082828295509550955050505093509350939050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160048081111561162657611625612529565b5b60f81b846040518363ffffffff1660e01b8152600401611647929190612593565b6020604051808303816000875af1158015611666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168a91906125bc565b9050919050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286116c660016004806001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016116f29493929190612465565b6060604051808303816000875af1158015611711573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173591906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286117866004600160046001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016117b29493929190612465565b6060604051808303816000875af11580156117d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f591906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d2861184560026004806001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016118719493929190612465565b6060604051808303816000875af1158015611890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b491906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286119056004600260046001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016119319493929190612465565b6060604051808303816000875af1158015611950573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197491906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d286119c460036004806001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b81526004016119f09493929190612465565b6060604051808303816000875af1158015611a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3391906124d6565b92509250925082828295509550955050505093509350939050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28611a846004600360046001611ef1565b8b8b8b67ffffffffffffffff166040518563ffffffff1660e01b8152600401611ab09493929190612465565b6060604051808303816000875af1158015611acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af391906124d6565b92509250925082828295509550955050505093509350939050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060016004811115611b4157611b40612529565b5b60f81b8460ff166040518363ffffffff1660e01b8152600401611b65929190612593565b6020604051808303816000875af1158015611b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba891906125bc565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060026004811115611be257611be1612529565b5b60f81b8461ffff166040518363ffffffff1660e01b8152600401611c07929190612593565b6020604051808303816000875af1158015611c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4a91906125bc565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060036004811115611c8457611c83612529565b5b60f81b8463ffffffff166040518363ffffffff1660e01b8152600401611cab929190612593565b6020604051808303816000875af1158015611cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cee91906125bc565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600480811115611d2757611d26612529565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b8152600401611d52929190612593565b6020604051808303816000875af1158015611d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9591906125bc565b9050919050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28611dd0600180600180611ef1565b8b8b8b60ff166040518563ffffffff1660e01b8152600401611df59493929190612465565b6060604051808303816000875af1158015611e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3891906124d6565b92509250925082828295509550955050505093509350939050565b6000606473ffffffffffffffffffffffffffffffffffffffff16630cfed56160016004811115611e8657611e85612529565b5b60f81b846040518363ffffffff1660e01b8152600401611ea7929190612593565b6020604051808303816000875af1158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea91906125bc565b9050919050565b6000816002811115611f0657611f05612529565b5b60ff166008846004811115611f1e57611f1d612529565b5b61ffff16901b61ffff166010866004811115611f3d57611f3c612529565b5b62ffffff16901b62ffffff166018886004811115611f5e57611f5d612529565b5b63ffffffff16901b17171760e01b9050949350505050565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61201882611fcf565b810181811067ffffffffffffffff8211171561203757612036611fe0565b5b80604052505050565b600061204a611fbb565b9050612056828261200f565b919050565b6000819050919050565b61206e8161205b565b811461207957600080fd5b50565b60008135905061208b81612065565b92915050565b61209a8161205b565b81146120a557600080fd5b50565b6000813590506120b781612091565b92915050565b6120c68161205b565b81146120d157600080fd5b50565b6000813590506120e3816120bd565b92915050565b6120f28161205b565b81146120fd57600080fd5b50565b60008135905061210f816120e9565b92915050565b6000610100828403121561212c5761212b611fca565b5b612137610100612040565b905060006121478482850161207c565b600083015250602061215b8482850161207c565b602083015250604061216f848285016120a8565b6040830152506060612183848285016120a8565b6060830152506080612197848285016120d4565b60808301525060a06121ab848285016120d4565b60a08301525060c06121bf84828501612100565b60c08301525060e06121d384828501612100565b60e08301525092915050565b600060ff82169050919050565b6121f5816121df565b811461220057600080fd5b50565b600081359050612212816121ec565b92915050565b60008115159050919050565b61222d81612218565b811461223857600080fd5b50565b60008135905061224a81612224565b92915050565b6000806000806000610180868803121561226d5761226c611fc5565b5b600061227b88828901612115565b95505061010061228d88828901612203565b94505061012061229f88828901612203565b9350506101406122b18882890161223b565b9250506101606122c388828901612203565b9150509295509295909350565b6122d9816121df565b82525050565b6122e881612218565b82525050565b600060608201905061230360008301866122d0565b61231060208301856122d0565b61231d60408301846122df565b949350505050565b60008060006060848603121561233e5761233d611fc5565b5b600061234c86828701612203565b935050602061235d86828701612203565b925050604061236e86828701612203565b9150509250925092565b600082825260208201905092915050565b7f7472616e73666572546573743a20636865636b207363616c6172206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006123e5602183612378565b91506123f082612389565b604082019050919050565b60006020820190508181036000830152612414816123d8565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6124508161241b565b82525050565b61245f8161205b565b82525050565b600060808201905061247a6000830187612447565b6124876020830186612456565b6124946040830185612456565b6124a16060830184612456565b95945050505050565b6124b38161205b565b81146124be57600080fd5b50565b6000815190506124d0816124aa565b92915050565b6000806000606084860312156124ef576124ee611fc5565b5b60006124fd868287016124c1565b935050602061250e868287016124c1565b925050604061251f868287016124c1565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61258d81612558565b82525050565b60006040820190506125a86000830185612584565b6125b56020830184612456565b9392505050565b6000602082840312156125d2576125d1611fc5565b5b60006125e0848285016124c1565b9150509291505056fea2646970667358221220f9b3efaf3a5651e81e8b9aa383288344f2b71dbb24e5644f9f308bf3c74de0b464736f6c63430008140033";

type TransferScalarTestsContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferScalarTestsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferScalarTestsContract__factory extends ContractFactory {
  constructor(...args: TransferScalarTestsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferScalarTestsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TransferScalarTestsContract__factory {
    return super.connect(runner) as TransferScalarTestsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferScalarTestsContractInterface {
    return new Interface(_abi) as TransferScalarTestsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TransferScalarTestsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TransferScalarTestsContract;
  }
}
