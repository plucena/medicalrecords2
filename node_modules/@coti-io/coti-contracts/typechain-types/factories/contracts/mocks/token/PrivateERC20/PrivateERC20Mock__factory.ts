/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PrivateERC20Mock,
  PrivateERC20MockInterface,
} from "../../../../../contracts/mocks/token/PrivateERC20/PrivateERC20Mock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "ownerValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "spenderValue",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "senderValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ctUint64",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountEncryptionAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "ownerCiphertext",
            type: "uint256",
          },
          {
            internalType: "ctUint64",
            name: "spenderCiphertext",
            type: "uint256",
          },
        ],
        internalType: "struct IPrivateERC20.Allowance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "gtUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSpender",
        type: "bool",
      },
    ],
    name: "reencryptAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offBoardAddress",
        type: "address",
      },
    ],
    name: "setAccountEncryptionAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "gtUint64",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "gtBool",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601081526020017f5072697661746545524332304d6f636b000000000000000000000000000000008152506040518060400160405280600581526020017f504532304d00000000000000000000000000000000000000000000000000000081525081600490816200008f919062000324565b508060059081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b612ab7806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063313ce567116100ad57806396b2db381161007157806396b2db3814610344578063a42c0af914610374578063a7d9ad6a146103a4578063a9059cbb146103d4578063dd62ed3e1461040457610121565b8063313ce5671461028a57806370a08231146102a8578063722713f7146102d85780638269bcc3146102f657806395d89b411461032657610121565b806313691c76116100f457806313691c76146101d457806318160ddd146101f057806323b872dd1461020e57806326a9b3f11461023e5780632893c5b01461026e57610121565b8063043d20851461012657806306fdde031461015657806308a2032a14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611f08565b610434565b60405161014d9190611f44565b60405180910390f35b61015e61049c565b60405161016b9190611fef565b60405180910390f35b61018e60048036038101906101899190612035565b61052e565b60405161019b91906120e9565b60405180910390f35b6101be60048036038101906101b99190612130565b610572565b6040516101cb919061218b565b60405180910390f35b6101ee60048036038101906101e991906121e6565b610595565b005b6101f86105ac565b6040516102059190612235565b60405180910390f35b61022860048036038101906102239190612250565b6105b1565b60405161023591906120e9565b60405180910390f35b610258600480360381019061025391906122cf565b6105de565b604051610265919061218b565b60405180910390f35b610288600480360381019061028391906121e6565b610756565b005b61029261076d565b60405161029f919061232b565b60405180910390f35b6102c260048036038101906102bd9190611f08565b610776565b6040516102cf9190612355565b60405180910390f35b6102e06107c2565b6040516102ed919061237f565b60405180910390f35b610310600480360381019061030b9190611f08565b6107d9565b60405161031d919061218b565b60405180910390f35b61032e6108d3565b60405161033b9190611fef565b60405180910390f35b61035e600480360381019061035991906122cf565b610965565b60405161036b919061237f565b60405180910390f35b61038e6004803603810190610389919061239a565b610a9b565b60405161039b919061218b565b60405180910390f35b6103be60048036038101906103b9919061239a565b610ad5565b6040516103cb91906120e9565b60405180910390f35b6103ee60048036038101906103e99190612130565b610b0d565b6040516103fb91906120e9565b60405180910390f35b61041e600480360381019061041991906123f6565b610b2e565b60405161042b9190612487565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600480546104ab906124d1565b80601f01602080910402602001604051908101604052809291908181526020018280546104d7906124d1565b80156105245780601f106104f957610100808354040283529160200191610524565b820191906000526020600020905b81548152906001019060200180831161050757829003601f168201915b5050505050905090565b600080610539610be3565b9050600061054f8461054a906126d9565b610beb565b905061055c868383610c92565b610567868683610de7565b925050509392505050565b60008061057d610be3565b905061058a818585610ee0565b600191505092915050565b6105a7826105a28361112d565b6111d4565b505050565b600090565b6000806105bc610be3565b90506105c9858285610c92565b6105d4858585610de7565b9150509392505050565b6000806105f16105ec610be3565b61125b565b905082156106a457600060026000610607610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506106966106908260000154611300565b8361132b565b81600101819055505061074b565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106ef610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061074161073b8260000154611300565b8361132b565b8160020181905550505b600191505092915050565b610768826107638361112d565b6113ea565b505050565b60006002905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60006107d46107cf610be3565b611471565b905090565b6000806107ec6107e7610be3565b611471565b9050826000806107fa610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061087c818461132b565b60016000610888610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001915050919050565b6060600580546108e2906124d1565b80601f016020809104026020016040519081016040528092919081815260200182805461090e906124d1565b801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b5050505050905090565b60008115610a03576109fc6002600061097c610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611300565b9050610a95565b610a92600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a4f610be3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611300565b90505b92915050565b600080610aa6610be3565b90506000610abc84610ab7906126d9565b610beb565b9050610ac9828683610ee0565b60019250505092915050565b600080610ae0610be3565b90506000610af684610af1906126d9565b610beb565b9050610b03828683610de7565b9250505092915050565b600080610b18610be3565b9050610b25818585610de7565b91505092915050565b610b36611e5b565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905092915050565b600033905090565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e10600480811115610c1d57610c1c6126ec565b5b60f81b846000015185602001516040518463ffffffff1660e01b8152600401610c48939291906127ab565b6020604051808303816000875af1158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b9190612815565b9050919050565b6000610cdf600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611300565b90506000610d6b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611300565b90506000610d8982610d8467ffffffffffffffff61112d565b6114ca565b90506000610d978486611561565b90506000610da58487611561565b90506000610dcf610dbf85610dba86866115f8565b6115f8565b610dc9878a61168f565b87611726565b9050610ddc898983610ee0565b505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e5a5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e519190611f44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecc5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ec39190611f44565b60405180910390fd5b610ed78484846117c0565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f525760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f499190611f44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc45760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610fbb9190611f44565b60405180910390fd5b6000610fcf82611996565b90506000610fdc8561125b565b90506000610fea848361132b565b9050610ff58561125b565b91506000611003858461132b565b9050604051806060016040528085815260200183815260200182815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a7848460405161111c929190612842565b60405180910390a350505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060048081111561115f5761115e6126ec565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b815260040161118a92919061286b565b6020604051808303816000875af11580156111a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cd9190612815565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112475760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161123e9190611f44565b60405180910390fd5b611253836000846117c0565b905092915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112f7578290505b80915050919050565b600080820361131a57611313600061112d565b9050611326565b61132382611a33565b90505b919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860048081111561135d5761135c6126ec565b5b60f81b858560405160200161137291906128dc565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161139f939291906127ab565b6020604051808303816000875af11580156113be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e29190612815565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361145d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114549190611f44565b60405180910390fd5b611469600084846117c0565b905092915050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506114c281611300565b915050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16637c12a1eb6114f66004806000611ad0565b85856040518463ffffffff1660e01b815260040161151693929190612932565b6020604051808303816000875af1158015611535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115599190612815565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663dd14869361158d6004806000611ad0565b85856040518463ffffffff1660e01b81526004016115ad93929190612932565b6020604051808303816000875af11580156115cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f09190612815565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663fb7da35f6116246000806000611ad0565b85856040518463ffffffff1660e01b815260040161164493929190612932565b6020604051808303816000875af1158015611663573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116879190612815565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663371d1bf26116bb6004806000611ad0565b85856040518463ffffffff1660e01b81526004016116db93929190612932565b6020604051808303816000875af11580156116fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171e9190612815565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff166320cc408d6117526004806000611ad0565b8686866040518563ffffffff1660e01b81526004016117749493929190612969565b6020604051808303816000875af1158015611793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b79190612815565b90509392505050565b600080600083905060006117d46001611b31565b9050600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603611854576000611817600354611300565b90506118238187611be5565b905061182e81611996565b600381905550600061183f88611471565b905061184b8188611be5565b945050506118a1565b600061185f88611471565b9050600061186c88611471565b9050600061187b83838a611c7c565b8096508198508293505050506118918a82611d31565b61189b868361168f565b94505050505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036119055760006118e2600354611300565b90506118ee818461168f565b90506118f981611996565b60038190555050611910565b61190f8684611d31565b5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44611969858b61132b565b611973868b61132b565b604051611981929190612842565b60405180910390a38093505050509392505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c026004808111156119c8576119c76126ec565b5b60f81b846040518363ffffffff1660e01b81526004016119e992919061286b565b6020604051808303816000875af1158015611a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2c9190612815565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e5600480811115611a6557611a646126ec565b5b60f81b846040518363ffffffff1660e01b8152600401611a8692919061286b565b6020604051808303816000875af1158015611aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac99190612815565b9050919050565b6000816002811115611ae557611ae46126ec565b5b60ff166008846004811115611afd57611afc6126ec565b5b61ffff16901b61ffff166010866004811115611b1c57611b1b6126ec565b5b62ffffff16901b171760e81b90509392505050565b60008082611b40576000611b43565b60015b60ff169050606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b6060006004811115611b7957611b786126ec565b5b60f81b836040518363ffffffff1660e01b8152600401611b9a92919061286b565b6020604051808303816000875af1158015611bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdd9190612815565b915050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d0150611c116004806000611ad0565b85856040518463ffffffff1660e01b8152600401611c3193929190612932565b6020604051808303816000875af1158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c749190612815565b905092915050565b600080600080600080606473ffffffffffffffffffffffffffffffffffffffff166356c72d28611cb160048060046000611da3565b8b8b8b6040518563ffffffff1660e01b8152600401611cd394939291906129e9565b6060604051808303816000875af1158015611cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d169190612a2e565b92509250925082828295509550955050505093509350939050565b6000611d3c8361125b565b9050611d488282611e28565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155905050505050565b6000816002811115611db857611db76126ec565b5b60ff166008846004811115611dd057611dcf6126ec565b5b61ffff16901b61ffff166010866004811115611def57611dee6126ec565b5b62ffffff16901b62ffffff166018886004811115611e1057611e0f6126ec565b5b63ffffffff16901b17171760e01b9050949350505050565b611e30611e7c565b611e3983611996565b816000018181525050611e4c838361132b565b81602001818152505092915050565b60405180606001604052806000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ed582611eaa565b9050919050565b611ee581611eca565b8114611ef057600080fd5b50565b600081359050611f0281611edc565b92915050565b600060208284031215611f1e57611f1d611ea0565b5b6000611f2c84828501611ef3565b91505092915050565b611f3e81611eca565b82525050565b6000602082019050611f596000830184611f35565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f99578082015181840152602081019050611f7e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fc182611f5f565b611fcb8185611f6a565b9350611fdb818560208601611f7b565b611fe481611fa5565b840191505092915050565b600060208201905081810360008301526120098184611fb6565b905092915050565b600080fd5b60006040828403121561202c5761202b612011565b5b81905092915050565b60008060006060848603121561204e5761204d611ea0565b5b600061205c86828701611ef3565b935050602061206d86828701611ef3565b925050604084013567ffffffffffffffff81111561208e5761208d611ea5565b5b61209a86828701612016565b9150509250925092565b6000819050919050565b6000819050919050565b60006120d36120ce6120c9846120a4565b6120ae565b6120a4565b9050919050565b6120e3816120b8565b82525050565b60006020820190506120fe60008301846120da565b92915050565b61210d816120a4565b811461211857600080fd5b50565b60008135905061212a81612104565b92915050565b6000806040838503121561214757612146611ea0565b5b600061215585828601611ef3565b92505060206121668582860161211b565b9150509250929050565b60008115159050919050565b61218581612170565b82525050565b60006020820190506121a0600083018461217c565b92915050565b600067ffffffffffffffff82169050919050565b6121c3816121a6565b81146121ce57600080fd5b50565b6000813590506121e0816121ba565b92915050565b600080604083850312156121fd576121fc611ea0565b5b600061220b85828601611ef3565b925050602061221c858286016121d1565b9150509250929050565b61222f816120a4565b82525050565b600060208201905061224a6000830184612226565b92915050565b60008060006060848603121561226957612268611ea0565b5b600061227786828701611ef3565b935050602061228886828701611ef3565b92505060406122998682870161211b565b9150509250925092565b6122ac81612170565b81146122b757600080fd5b50565b6000813590506122c9816122a3565b92915050565b600080604083850312156122e6576122e5611ea0565b5b60006122f485828601611ef3565b9250506020612305858286016122ba565b9150509250929050565b600060ff82169050919050565b6123258161230f565b82525050565b6000602082019050612340600083018461231c565b92915050565b61234f816120b8565b82525050565b600060208201905061236a6000830184612346565b92915050565b612379816120b8565b82525050565b60006020820190506123946000830184612370565b92915050565b600080604083850312156123b1576123b0611ea0565b5b60006123bf85828601611ef3565b925050602083013567ffffffffffffffff8111156123e0576123df611ea5565b5b6123ec85828601612016565b9150509250929050565b6000806040838503121561240d5761240c611ea0565b5b600061241b85828601611ef3565b925050602061242c85828601611ef3565b9150509250929050565b61243f816120b8565b82525050565b60608201600082015161245b6000850182612436565b50602082015161246e6020850182612436565b5060408201516124816040850182612436565b50505050565b600060608201905061249c6000830184612445565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124e957607f821691505b6020821081036124fc576124fb6124a2565b5b50919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61253f82611fa5565b810181811067ffffffffffffffff8211171561255e5761255d612507565b5b80604052505050565b6000612571611e96565b905061257d8282612536565b919050565b600080fd5b612590816120a4565b811461259b57600080fd5b50565b6000813590506125ad81612587565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156125d8576125d7612507565b5b6125e182611fa5565b9050602081019050919050565b82818337600083830152505050565b600061261061260b846125bd565b612567565b90508281526020810184848401111561262c5761262b6125b8565b5b6126378482856125ee565b509392505050565b600082601f830112612654576126536125b3565b5b81356126648482602086016125fd565b91505092915050565b60006040828403121561268357612682612502565b5b61268d6040612567565b9050600061269d8482850161259e565b600083015250602082013567ffffffffffffffff8111156126c1576126c0612582565b5b6126cd8482850161263f565b60208301525092915050565b60006126e5368361266d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6127508161271b565b82525050565b600081519050919050565b600082825260208201905092915050565b600061277d82612756565b6127878185612761565b9350612797818560208601611f7b565b6127a081611fa5565b840191505092915050565b60006060820190506127c06000830186612747565b6127cd6020830185612226565b81810360408301526127df8184612772565b9050949350505050565b6127f2816120a4565b81146127fd57600080fd5b50565b60008151905061280f816127e9565b92915050565b60006020828403121561282b5761282a611ea0565b5b600061283984828501612800565b91505092915050565b60006040820190506128576000830185612346565b6128646020830184612346565b9392505050565b60006040820190506128806000830185612747565b61288d6020830184612226565b9392505050565b60008160601b9050919050565b60006128ac82612894565b9050919050565b60006128be826128a1565b9050919050565b6128d66128d182611eca565b6128b3565b82525050565b60006128e882846128c5565b60148201915081905092915050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b61292c816128f7565b82525050565b60006060820190506129476000830186612923565b6129546020830185612226565b6129616040830184612226565b949350505050565b600060808201905061297e6000830187612923565b61298b6020830186612226565b6129986040830185612226565b6129a56060830184612226565b95945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6129e3816129ae565b82525050565b60006080820190506129fe60008301876129da565b612a0b6020830186612226565b612a186040830185612226565b612a256060830184612226565b95945050505050565b600080600060608486031215612a4757612a46611ea0565b5b6000612a5586828701612800565b9350506020612a6686828701612800565b9250506040612a7786828701612800565b915050925092509256fea26469706673582212201d12ede1ad6b9e959c09ae74c66053f6655ab89c13462915f9e3e6ba3e905b5864736f6c63430008140033";

type PrivateERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateERC20Mock__factory extends ContractFactory {
  constructor(...args: PrivateERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateERC20Mock__factory {
    return super.connect(runner) as PrivateERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateERC20MockInterface {
    return new Interface(_abi) as PrivateERC20MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateERC20Mock {
    return new Contract(address, _abi, runner) as unknown as PrivateERC20Mock;
  }
}
